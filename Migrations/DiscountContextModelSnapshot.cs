// <auto-generated />
using Discount.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Discount.Migrations
{
    [DbContext(typeof(DiscountContext))]
    partial class DiscountContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Discount.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("CityName");

                    b.HasKey("CityId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("Discount.Models.Product", b =>
                {
                    b.Property<long>("DiscountedProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DiscountedProductId"));

                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ProductId"));

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("DiscountedProductId")
                        .HasName("Product_pkey");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Discount.Models.ProductCity", b =>
                {
                    b.Property<int>("CityCityId")
                        .HasColumnType("integer")
                        .HasColumnName("City_CityId");

                    b.Property<long>("ProductDiscountedProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Product_DiscountedProductId");

                    b.HasIndex("CityCityId");

                    b.HasIndex("ProductDiscountedProductId");

                    b.ToTable("Product_City", (string)null);
                });

            modelBuilder.Entity("Discount.Models.ProductCity", b =>
                {
                    b.HasOne("Discount.Models.City", "CityCity")
                        .WithMany()
                        .HasForeignKey("CityCityId")
                        .IsRequired()
                        .HasConstraintName("Product_City_City_CityId_fkey");

                    b.HasOne("Discount.Models.Product", "ProductDiscountedProduct")
                        .WithMany()
                        .HasForeignKey("ProductDiscountedProductId")
                        .IsRequired()
                        .HasConstraintName("Product_City_Product_DiscountedProductId_fkey");

                    b.Navigation("CityCity");

                    b.Navigation("ProductDiscountedProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
